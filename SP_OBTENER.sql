

/*													Procedimientos almacenados de OBTENER						 */


/*    SP_OBTENER_MEDICOS    */

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_OBTENER_MEDICOS]
AS
BEGIN
   
        -- Consultar todos los registros de la tabla TB_MEDICOS
        SELECT 
			[TB_MEDICO].[ID_MEDICO],
            [TB_MEDICO].[CEDULA_MEDICO],
            [TB_MEDICO].[NOMBRE_MEDICO],
            [TB_MEDICO].[APELLIDO_MEDICO],
            [TB_MEDICO].[PASSWORD_MEDICO],
            [TB_MEDICO].[ESTADO_MEDICO],
			[TB_ESPECIALIDAD].[NOMBRE_ESPECIALIDAD],
			[TB_CLINICA].[NOMBRE_CLINICA]
        FROM
			[TB_MEDICO]
            INNER JOIN [TB_ESPECIALIDAD] ON [TB_MEDICO].[ID_ESPECIALIDAD] = [TB_ESPECIALIDAD].[ID_ESPECIALIDAD]
			INNER JOIN [TB_CLINICA] ON [TB_MEDICO].[ID_CLINICA] = [TB_CLINICA].[ID_CLINICA]
END


/*    SP_OBTENER_PACIENTES    */

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_OBTENER_PACIENTES]
AS
BEGIN
   
        -- Consultar todos los registros de la tabla TB_PACIENTES
        SELECT 
			[TB_PACIENTE].[ID_PACIENTE],
            [TB_PACIENTE].[CEDULA_PACIENTE],
            [TB_PACIENTE].[NOMBRE_PACIENTE],
            [TB_PACIENTE].[APELLIDO_PACIENTE],
			[TB_PACIENTE].[CORREO_PACIENTE],
            [TB_PACIENTE].[PASSWORD_PACIENTE],
			[TB_PACIENTE].[FECHA_REGISTRO_PACIENTE],
			[TB_PACIENTE].[NUMERO_VERIFICACION_PACIENTE],
            [TB_PACIENTE].[ESTADO_PACIENTE]
        FROM
			[TB_PACIENTE]
END

/*    SP_OBTENER_ESPECIALIDAD    */

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_OBTENER_ESPECIALIDAD]
AS
BEGIN
   
        -- Consultar todos los registros de la tabla TB_ESPECIALIDAD
        SELECT 
			[TB_ESPECIALIDAD].[ID_ESPECIALIDAD],
            [TB_ESPECIALIDAD].[NOMBRE_ESPECIALIDAD],
            [TB_ESPECIALIDAD].[DESCRIPCION_ESPECIALIDAD]
        FROM
			[TB_ESPECIALIDAD]
END

/*    SP_OBTENER_ESPECIALIDAD_POR_ID    */

CREATE PROCEDURE [dbo].[SP_OBTENER_ESPECIALIDAD_POR_ID]
	@ID_ESPECIALIDAD INT
AS
BEGIN
	SELECT
		[ID_ESPECIALIDAD],
		[NOMBRE_ESPECIALIDAD],
		[DESCRIPCION_ESPECIALIDAD]
	FROM
		[TB_ESPECIALIDAD]
	WHERE
		[ID_ESPECIALIDAD] = @ID_ESPECIALIDAD
END




/*    SP_obtener_medicos_por_id    */

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_OBTENER_MEDICO_POR_ID]
	@ID_MEDICO INT
AS
BEGIN
   
        -- Consultar todos los registros de la tabla TB_MEDICOS
        SELECT 
			[TB_MEDICO].[ID_MEDICO],
            [TB_MEDICO].[CEDULA_MEDICO],
            [TB_MEDICO].[NOMBRE_MEDICO],
            [TB_MEDICO].[APELLIDO_MEDICO],
            [TB_MEDICO].[PASSWORD_MEDICO],
            [TB_MEDICO].[ESTADO_MEDICO],
			[TB_ESPECIALIDAD].[NOMBRE_ESPECIALIDAD],
			[TB_CLINICA].[NOMBRE_CLINICA]
        FROM
			[TB_MEDICO]
            INNER JOIN [TB_ESPECIALIDAD] ON [TB_MEDICO].[ID_ESPECIALIDAD] = [TB_ESPECIALIDAD].[ID_ESPECIALIDAD]
			INNER JOIN [TB_CLINICA] ON [TB_MEDICO].[ID_CLINICA] = [TB_CLINICA].[ID_CLINICA]
		WHERE
			[TB_MEDICO].[ID_MEDICO] = @ID_MEDICO
END

/*    SP_OBTENER_PACIENTE_POR_ID    */

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_OBTENER_PACIENTE_POR_ID]
	@ID_PACIENTE INT
AS
BEGIN
   
        -- Consultar todos los registros de la tabla TB_PACIENTES
        SELECT 
			[TB_PACIENTE].[ID_PACIENTE],
            [TB_PACIENTE].[CEDULA_PACIENTE],
            [TB_PACIENTE].[NOMBRE_PACIENTE],
            [TB_PACIENTE].[APELLIDO_PACIENTE],
			[TB_PACIENTE].[CORREO_PACIENTE],
            [TB_PACIENTE].[PASSWORD_PACIENTE],
			[TB_PACIENTE].[FECHA_REGISTRO_PACIENTE],
			[TB_PACIENTE].[NUMERO_VERIFICACION_PACIENTE],
            [TB_PACIENTE].[ESTADO_PACIENTE]
        FROM
			[TB_PACIENTE]
		WHERE
			[TB_PACIENTE].[ID_PACIENTE] = @ID_PACIENTE
END

/*    SP_OBTENER_ADMINISTRADOR_POR_ID    */

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_OBTENER_ADMINISTRADOR_POR_ID]
	@ID_ADMINISTRADOR INT
AS
BEGIN
   
        -- Consultar todos los registros de la tabla TB_PACIENTES
        SELECT 
			[TB_ADMINISTRADOR].[ID_ADMINISTRADOR],
            [TB_ADMINISTRADOR].[CEDULA_ADMINISTRADOR],
            [TB_ADMINISTRADOR].[NOMBRE_ADMINISTRADOR],
            [TB_ADMINISTRADOR].[APELLIDO_ADMINISTRADOR],
			[TB_ADMINISTRADOR].[PASSWORD_ADMINISTRADOR]

        FROM
			[TB_ADMINISTRADOR]
		WHERE
			[TB_ADMINISTRADOR].[ID_ADMINISTRADOR] = @ID_ADMINISTRADOR
END


/*    SP_OBTENER_CLINICAS		*/

CREATE PROCEDURE [dbo].[SP_OBTENER_CLINICAS]
AS
BEGIN
	SELECT
		[ID_CLINICA],
		[NOMBRE_CLINICA],
		[TELEFONO_CLINICA],
		[UBICACION_CLINICA]
	FROM
		[TB_CLINICA]
END



/*    SP_OBTENER_CLINICA_POR_ID     */

CREATE PROCEDURE [dbo].[SP_OBTENER_CLINICA_POR_ID]
	@ID_CLINICA INT
AS
BEGIN
	SELECT
		[ID_CLINICA],
		[NOMBRE_CLINICA],
		[TELEFONO_CLINICA],
		[UBICACION_CLINICA]
	FROM
		[TB_CLINICA]
	WHERE
		[ID_CLINICA] = @ID_CLINICA
END

/*    SP_OBTENER_CITA_POR_ID     */

CREATE PROCEDURE [dbo].[SP_OBTENER_CITA_POR_ID]
    @ID_CITAS INT
AS
BEGIN
    SET NOCOUNT ON;

    SELECT
        ID_CITAS,
        FECHA_CITAS,
        HORA_INICIO_CITAS,
        HORA_FIN_CITAS,
        MOTIVO_CITAS,
        ID_PACIENTE,
        ID_CLINICA,
        ESTADO_CITAS
    FROM
        TB_CITAS
    WHERE
        ID_CITAS = @ID_CITAS;
END;



/*    SP_OBTENER_CITAS_PENDIENTES_PACIENTE    */

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_OBTENER_CITAS_PENDIENTES_PACIENTE]
    @ID_PACIENTE INT
AS
BEGIN
    -- Consultar las citas pendientes del paciente que no han pasado
    SELECT 
		[TB_CITAS].[ID_CITAS],
        [TB_CITAS].[FECHA_CITAS],
        [TB_CITAS].[HORA_INICIO_CITAS],
        [TB_CITAS].[HORA_FIN_CITAS],
        [TB_CITAS].[MOTIVO_CITAS],
        [TB_CLINICA].[NOMBRE_CLINICA]
    FROM
        [TB_CITAS]
        INNER JOIN [TB_CLINICA] ON [TB_CITAS].[ID_CLINICA] = [TB_CLINICA].[ID_CLINICA]
    WHERE
        [TB_CITAS].[ID_PACIENTE] = @ID_PACIENTE
        AND [TB_CITAS].[ESTADO_CITAS] = 0
END


/*    SP_OBTENER_CITAS_PENDIENTES_CLINICA    */

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_OBTENER_CITAS_PENDIENTES_CLINICA]
    @ID_CLINICA INT
AS
BEGIN
    -- Consultar las citas pendientes de LA CLINICA que no han pasado
    SELECT 
		[TB_CITAS].[ID_CITAS],
        [TB_CITAS].[FECHA_CITAS],
        [TB_CITAS].[HORA_INICIO_CITAS],
        [TB_CITAS].[HORA_FIN_CITAS],
        [TB_CITAS].[MOTIVO_CITAS],
		[TB_PACIENTE].[CEDULA_PACIENTE],
        [TB_PACIENTE].[NOMBRE_PACIENTE]
    FROM
        [TB_CITAS]
        INNER JOIN [TB_PACIENTE] ON [TB_CITAS].[ID_PACIENTE] = [TB_PACIENTE].[ID_PACIENTE]
    WHERE
        [TB_CITAS].[ID_CLINICA] = @ID_CLINICA
        AND [TB_CITAS].[ESTADO_CITAS] = 0
END

/*    SP_OBTENER_HISTORICO_CITAS_POR_PACIENTE    */

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_OBTENER_HISTORICO_CITAS_POR_PACIENTE]
    @ID_PACIENTE INT
AS
BEGIN
    -- Consultar EL HISTORICO de citas de un paciente
    SELECT
		[TB_HISTORICO].[ID_HISTORICO],
		[TB_PACIENTE].[CEDULA_PACIENTE],
        [TB_CLINICA].[NOMBRE_CLINICA],
		[TB_MEDICO].[CEDULA_MEDICO],
		[TB_CITAS].[FECHA_CITAS],
		[TB_CITAS].[HORA_INICIO_CITAS],
		[TB_CITAS].[HORA_FIN_CITAS],
		[TB_CITAS].[MOTIVO_CITAS]
    FROM
        [TB_HISTORICO]
        INNER JOIN [TB_MEDICO] ON [TB_HISTORICO].[ID_MEDICO] = [TB_MEDICO].[ID_MEDICO]
        INNER JOIN [TB_CITAS] ON [TB_HISTORICO].[ID_CITAS] = [TB_CITAS].[ID_CITAS]
        INNER JOIN [TB_CLINICA] ON [TB_CITAS].[ID_CLINICA] = [TB_CLINICA].[ID_CLINICA]
        INNER JOIN [TB_PACIENTE] ON [TB_CITAS].[ID_PACIENTE] = [TB_PACIENTE].[ID_PACIENTE]
    WHERE
        [TB_PACIENTE].[ID_PACIENTE] = @ID_PACIENTE
END


/*    SP_OBTENER_CITAS_DISPONIBLES_CLINICA    */
CREATE PROCEDURE [dbo].[SP_OBTENER_CITAS_DISPONIBLES_CLINICA]
    @ID_CLINICA INT
AS
BEGIN
    SET DATEFORMAT ymd;
    DECLARE @FechaActual DATE = CONVERT(DATE, GETDATE());
    DECLARE @HoraInicio TIME = CAST('08:00:00' AS TIME);
    DECLARE @HoraFin TIME = CAST('17:00:00' AS TIME);

    -- Obtener todas las horas disponibles en el rango especificado
    ;WITH HorasDisponibles AS (
        SELECT @FechaActual AS Fecha, @HoraInicio AS HoraInicio, DATEADD(HOUR, 1, @HoraInicio) AS HoraFin
        UNION ALL
        SELECT
            Fecha,
            HoraFin,
            DATEADD(HOUR, 1, HoraFin) AS HoraFin
        FROM
            HorasDisponibles
        WHERE
            HoraFin < @HoraFin
    )
    SELECT
        CONVERT(TIME, HoraInicio) AS CitaDisponibleInicio,
        CONVERT(TIME, HoraFin) AS CitaDisponibleFin
    FROM
        HorasDisponibles
    WHERE
        NOT EXISTS (
            -- Verificar si el intervalo de una hora ya está ocupado por una cita existente
            SELECT 1
            FROM TB_CITAS
            WHERE
                ID_CLINICA = @ID_CLINICA
                AND FECHA_CITAS = Fecha
                AND (
                    (HORA_INICIO_CITAS < HoraFin AND HORA_FIN_CITAS > HoraInicio)
                    OR (HORA_INICIO_CITAS >= HoraInicio AND HORA_INICIO_CITAS < HoraFin)
                    OR (HORA_FIN_CITAS > HoraInicio AND HORA_FIN_CITAS <= HoraFin)
                )
        );
END
